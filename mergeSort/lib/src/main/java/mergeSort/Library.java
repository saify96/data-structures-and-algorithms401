/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package mergeSort;

import java.util.Arrays;

public class Library {
    public static void main(String[] args) {
        int[] testArray = {8, 4, 23, 42, 16, 15};
        System.out.println(Arrays.toString(mergeSort(testArray)));
    }

    public static int[] mergeSort(int[] array) {
        int n = array.length;
        if (n < 2) {
            return array;
        }
        int mid = n / 2;
        int[] leftArray = new int[mid];
        int[] rightArray = new int[n - mid];
        for (int i = 0; i < mid; i++) {
            leftArray[i] = array[i];
        }
        for (int i = mid; i < n; i++) {
            rightArray[i - mid] = array[i];
        }
        mergeSort(leftArray);
        mergeSort(rightArray);
        return merge(leftArray, rightArray, array);
    }

    public static int[] merge(int[] leftArray, int[] rightArray, int[] array) {
        int i = 0;
        int j = 0;
        int k = 0;
        while (i < leftArray.length && j < rightArray.length) {
            if (leftArray[i] <= rightArray[j]) {
                array[k] = leftArray[i];
                i++;
            } else {
                array[k] = rightArray[j];
                j++;
            }
            k++;
        }
        while (i < leftArray.length) {
            array[k] = leftArray[i];
            i++;
            k++;
        }
        while (j < rightArray.length) {
            array[k] = rightArray[j];
            j++;
            k++;
        }
        return array;
    }
}
