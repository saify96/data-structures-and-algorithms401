/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quickSort;

import java.util.Arrays;

public class Library {
    public static void main(String[] args) {
        int[] test = {8, 4, 23, 42, 16, 15};
        quickSort(test, 0, test.length - 1);
        System.out.println(Arrays.toString(test));
    }

    static void quickSort(int[] arr, int left, int right) {
        System.out.println("recursive");
        System.out.println("left= " + left + " right= " + right);
        if (left < right) {
            int position = partition(arr, left, right);
            quickSort(arr, left, position - 1);
            quickSort(arr, position + 1, right);
        }

    }

    public static int partition(int[] arr, int left, int right) {
        int pivot = arr[right];
        int low = left - 1;
        System.out.println("pivot=" + pivot);
        for (int i = left; i < right; i++) {
            System.out.println("i=" + i + "  low=" + low);
            if (arr[i] <= pivot) {
                System.out.println("if " + arr[i] + "<=" + pivot);
                System.out.println("before swap " + Arrays.toString(arr));
                low++;
                System.out.println("update low before swap low= " + low);
                System.out.println("swap " + i + " with " + low);
                swap(arr, i, low);
                System.out.println("after swap " + Arrays.toString(arr));
            }
        }
        swap(arr, right, low + 1);
        System.out.println("last swap " + Arrays.toString(arr));

        System.out.println("return " + (low + 1));
        return low + 1;
    }

    static void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

}

